header = '''# -*- coding: utf-8; -*-
# ---------------------------------------------------------------------------------------------------------------------
#                            Разработано ООО «ЛаБС», все права принадлежат ОАО "ПМЗ "Восход"
# ---------------------------------------------------------------------------------------------------------------------

test_script_header = """
# ---------------------------------------------------------------------------------------------------------------------
# [PURPOSE]: BUKSUPK_SW.######: Тест проверки модуля ######.
#
# [VERIFIED REQUIREMENTS]: BUKSUPK_SW.######
#
# [FUNCTIONS]:
#
# execute_testcase: Проверить значения параметров после отработки функции
#
'''

# add desctiptions of testcases here

header_2 = '''# ---------------------------------------------------------------------------------------------------------------------
#
# [MODIFICATION HISTORY]:
#     [VERSION]     : 1.0
#     [DATE]        : 01-January-1970
#     [AUTHOR]      : Иванов И. И.
#     [DESCRIPTION] : Начальная разработка.
#     [CR]          : N/A
#
# ---------------------------------------------------------------------------------------------------------------------
"""

from ctypes import *
import copy
from libs.low_test_drv import *
import framework.globals as test_globals_module


'''

header_reglist = '''# Список регистров для проверки
REGlist = []


'''

header_testcase_1 = '''def execute_testcase(in_data, verify_data, out_data, REGlist):
    """
    Назначение: Проверить значения параметров после отработки функции

    Идентификатор требований: BUKSUPK_SW.#####
    """

    #  входные данные теста
    test_globals_module.logger.print("==== Исходные значения ====")
    test_globals_module.logger.print(f"Входные данные: ")
    for structs in REGlist:
        reference_object = structs[0]
        for item in structs[1:]:
            attr = reference_object.item.__getattribute__(item)
            test_globals_module.logger.print(f"{reference_object}.{item} = {attr}")
            
    # Входные данные теста
    '''

header_testcase_2 = '''    # выходные данные теста
    # out_data

    # ======= Обмен данными в БУК СУПК
    # получить массив входных данных теста
    tx_data = set_in_data(input_data)

    # получить массив выходных данных теста
    ptr = CAN_lib.LowTest(tx_data[0], tx_data[1])

    # получить выходные данные теста
    out_data = get_out_data(ptr, out_data)
    # ==========================================

    test_globals_module.logger.print("==== Выходные значения ====")
    # проверяем соответствие значений каждого проверяемого регистра

    for structs in REGlist:
        reference_object = structs[0]
        for item in structs[1:]:
            expected_value = verify_data.__getattribute__(item)
            actual_value = out_data[0].__getattribute__(item)
            test_globals_module.test_session.verify(expected_value, actual_value,
                                                    f"Значение параметра {reference_object}.{item} "
                                                    f"соответствует ожидаемому")
                                               
                                               '''

comment_line = "# ============================================================" \
               "==========================================================\n"

main_low_header = '''//==============================================================================
// (C) Copyright 2021 ОАО "ПМЗ "Восход", разработано ООО «ЛаБС».
// г. Москва, Россия
//
// Блок:       БУК СУПК
// Вычислитель:A
// Компонент:  Драйвер теста test_
// Файл:       main_low_test.c
// Назначение: Обмен данными
//
// Состав:     main, 
//             set_test_out_data,
//             set_test_in_data,
//
// Примечания: нет
//------------------------------------------------------------------------------
// История изменений:
// Номер  Дата      Автор       CR       Описание
//------------------------------------------------------------------------------
//   1    01/01/70  Иванов И.   N/A      Начальная разработка
//==============================================================================

//------------------------------------------------------------------------------
// Включаемые файлы
//------------------------------------------------------------------------------
#include "low_test_drv.h"
#include "main.h"


//------------------------------------------------------------------------------
// Объявления и определения переменных
//------------------------------------------------------------------------------

// входные данные
uint32 test_number;

'''

main_low_header_2 = '''// выходные данные
// curr_config

static void set_test_in_data();
static void set_test_out_data();

'''

main_low_header_3 = '''

//--------------------------------------------------------------------
//      Основная функция
//--------------------------------------------------------------------
void main_test(void)
{
    InitDevice();

    //---------------------------------------------------------------------
    // Бесконечный цикл работы
    //---------------------------------------------------------------------
    while(1) 
    {
        // ожидание запроса от тестового окружения на проведения теста
        RequestRx();
        // записать входные глобальные данные и аргументы функции
        set_test_in_data();
        // выполнить функцию
        switch(test_number){
'''

main_low_header_4 = '''        }
        // записать выходные глобальные данные
        set_test_out_data();
        // передача выходных данных функции в тестовое окружение
        ResponseTx(); 
    }  
}
//-------------------------------------------------------------
//       Запись входных данных
//-------------------------------------------------------------
static void set_test_in_data()
{
    SET_IN_DATA(&curr_config);
    SET_IN_DATA(&test_number);
    put_config_values();
}
//-------------------------------------------------------------
//             Запись выходных данных
//-------------------------------------------------------------
static void set_test_out_data()
{
    get_config_values();
    SET_OUT_DATA(&curr_config);
}
'''